ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point(data = data[data$group == 'other'], color = 'grey85') +
geom_point() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_point() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(b=40))
ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top')
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(b=0))
htmlwidgets::saveWidget(p, "index.html")
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75))
htmlwidgets::saveWidget(p, "index.html")
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
htmlwidgets::saveWidget(p, "index.html")
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
source('~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/stats/makePlot.r', echo=TRUE)
library(ggplot2)
library(plotly)
setwd("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/public/stats")
data <- read.csv("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/stats/JT1table.csv", header = TRUE)
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1) +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
htmlwidgets::saveWidget(p, "index.html")
data <- read.csv("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/stats/JT1table.csv", header = TRUE)
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
htmlwidgets::saveWidget(p, "index.html")
args <- commandArgs(TRUE)
subject <- as.double(args[1])
install.packages('ggplo2')
install.packages('ggplot2')
install.packages("ggplot2")
install.packages('plotly')
install.packages("plotly")
pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
htmlwidgets::saveWidget(p, pathTosave)
# outputPlot
pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
htmlwidgets::saveWidget(p, pathTosave)
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
setwd('../public/stats/')
setwd("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/public/stats")
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
setwd("../public/stats")
setwd("../")
setwd("public/stats")
setwd("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/stats")
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public/stats")
htmlwidgets::saveWidget(p, paste(subject,'DP.html',sep = ''))
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename)
devtools::install_github('hadley/ggplot2')
install.packages("devtools")
library("devtools", lib.loc="~/Library/R/3.3/library")
devtools::install_github('hadley/ggplot2')
# For Testing
subject = 'JT5'
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public/stats")
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename, selfcontained = FALSE)
p
g
g
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
g
# making the plot
ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
# For Testing
subject = 'JT1'
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public/stats")
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename, selfcontained = FALSE)
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public/stats")
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename, selfcontained = FALSE)
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public")
setwd("stats")
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename, selfcontained = FALSE)
subject = 'JT1'
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
# outputPlot
#pathTosave <- paste('../public/stats/',subject,'DP.html',sep = '')
#pathTosave <- file.path("..", "public", "stats", paste(subject,"DP.html",sep = ''))
#setwd("../public/stats")
setwd("../")
setwd("public")
setwd("stats")
filename <- paste(subject,'DP.html',sep = '')
htmlwidgets::saveWidget(p, filename, selfcontained = FALSE)
if(!require(ggplot2)){
install.packages('ggplo2')
library(ggplot2)
}
if(!require(plotly)){
install.packages('plotly')
library(plotly)
}
pathToTable = paste(subject,'DPTable.csv',sep = '')
data <- read.csv(pathToTable, header = TRUE)
setwd("~/Google_Drive/LIBR_Personal/Projects-gdrive/MKTurk4/stats")
data <- read.csv(pathToTable, header = TRUE)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.15),
margin = list(l=75, b= 75))
p
g
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.10),
margin = list(l=75, b= 75))
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.10),
margin = list(l=75, b= 75))
library(plotly)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
p <- ggplotly(g) %>%
layout(legend = list(orientation = 'h',
x=0.40,y=1.10),
margin = list(l=75, b= 75))
library(ggplot2)
# making the plot
g <- ggplot(data = na.omit(data), aes(x = trial_number, y = rt, group = 1, color = group)) +
geom_point() +
geom_line() +
facet_wrap(~ session, ncol = 1, scales = 'free_y') +
scale_colour_discrete("") +
#scale_y_continuous(limits = c(0,5)) +
#scale_x_continuous(breaks = seq(1,10,1)) +
labs(title="", x = "Trial Number", y = "Reaction Time (sec)") +
theme(#panel.background = element_rect(fill = 'grey'),
axis.line = element_line(color = 'black', size = 0.1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'top') +
theme_dark()
g
